version: '3'

networks:
  default:
    name: nginx-services

volumes:
  nextcloud:
  db:
  gitea_db:
  moodledb_data:
    driver: local
  moodle_data:
    driver: local
  moodledata_data:
    driver: local


services:
# Nginx ----------------------------------------------------------------------------------
  web:
    image: nginx
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf:ro
    - ./nginx:/usr/share/nginx/html
    - ./proxy_params:/etc/nginx/proxy_params
    - ./certbot/www:/var/www/certbot/:ro
    - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
    - "80:80"
    - "443:443"
    environment:
    - NGINX_HOST=${NGINX_HOST}
    - NGINX_PORT=80
    links:
      - php-fpm
  php-fpm:
    image: php:8-fpm
    volumes:
      - ./nginx:/usr/share/nginx/html
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
# Transmission ----------------------------------------------------------------------------------
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PASS}
      # - TRANSMISSION_WEB_HOME= #optional
      # - WHITELIST= #optional
      # - PEERPORT= #optional
      # - HOST_WHITELIST= #optional
    volumes:
      - ${TRANSMISSION_DOWNLOAD_DIR}:/downloads
      # - /path/to/data:/config
      # - /path/to/watch/folder:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
# Gitea ----------------------------------------------------------------------------------
  gitea:
    image: gitea/gitea
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=gitea_db:5432
      - GITEA__database__NAME=${GITEA_DB_NAME}
      - GITEA__database__USER=${GITEA_DB_USER}
      - GITEA__database__PASSWD=${GITEA_DB_PASS}
    restart: always
    volumes:
      - ./gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"
      - "222:22"
    depends_on:
      - gitea_db
  gitea_db:
    image: postgres:14
    container_name: gitea_db
    restart: always
    volumes:
      - gitea_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=gitea
      - POSTGRES_USER=gitea
      - POSTGRES_PASSWORD=gitea
# Moodle ----------------------------------------------------------------------------------
  moodle:
    image: docker.io/bitnami/moodle:4.2
    ports:
      - '8080:8080'
    environment:
      - MOODLE_DATABASE_TYPE=pgsql
      - MOODLE_DATABASE_HOST=moodle_db
      - MOODLE_DATABASE_PORT_NUMBER=5432
      - MOODLE_DATABASE_NAME=${MOODLE_DB_NAME}
      - MOODLE_DATABASE_USER=${MOODLE_DB_USER}
      - MOODLE_DATABASE_PASSWORD=${MOODLE_DB_PASS}
      - MOODLE_USERNAME=${MOODLE_USER}
      - MOODLE_PASSWORD=${MOODLE_PASS}
    volumes:
      - 'moodle_data:/bitnami/moodle'
      - 'moodledata_data:/bitnami/moodledata'
    depends_on:
      - moodle_db
  moodle_db:
    image: postgres:14
    container_name: moodle_db
    restart: always
    volumes:
      - moodledb_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${MOODLE_DB_NAME}
      - POSTGRES_USER=${MOODLE_DB_USER}
      - POSTGRES_PASSWORD=${MOODLE_DB_PASS}
# Nextcloud ----------------------------------------------------------------------------------
  db:
    image: postgres:14
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${NEXTCLOUD_DB_NAME}
      - POSTGRES_USER=${NEXTCLOUD_DB_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASS}
  
  redis:
    image: redis
    container_name: redis
    restart: always

  nextcloud:
    image: nextcloud
    container_name: nextcloud
    restart: always
    ports:
      - 8181:80
    links:
      - db
    volumes:
      - nextcloud:/var/www/html
      - ${NEXTCLOUD_EXT_STORAGE}:/var/www/html/external
    environment:
      - POSTGRES_DB=${NEXTCLOUD_DB_NAME}
      - POSTGRES_USER=${NEXTCLOUD_DB_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASS}
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - PHP_MEMORY_LIMIT=1024M
      - PHP_UPLOAD_LIMIT=8192M
      - NEXTCLOUD_TRUSTED_DOMAINS=${NGINX_HOST}
# Aria2 Web UI -------------------------------------------------------------------------------
  Aria2-Pro:
    container_name: aria2-pro
    image: p3terx/aria2-pro
    environment:
      - PUID=65534
      - PGID=65534
      - UMASK_SET=022
      - RPC_SECRET=${ARIA2_RPC_SECRET}
      - RPC_PORT=6800
      - LISTEN_PORT=6888
      - DISK_CACHE=64M
      - IPV6_MODE=false
      - UPDATE_TRACKERS=true
      - CUSTOM_TRACKER_URL=
      # - TZ=Asia/Shanghai
    volumes:
      # - ./aria2-config:/config
      - ${ARIA2_DOWNLOAD_DIR}:/downloads
# If you use host network mode, then no port mapping is required.
# This is the easiest way to use IPv6 networks.
    # network_mode: host
#    network_mode: bridge
    ports:
      - 6800:6800
      - 6888:6888
      - 6888:6888/udp
    restart: unless-stopped
# Since Aria2 will continue to generate logs, limit the log size to 1M to prevent your hard disk from running out of space.
    logging:
      driver: json-file
      options:
        max-size: 1m

# AriaNg is just a static web page, usually you only need to deploy on a single host.
  AriaNg:
    container_name: ariang
    image: p3terx/ariang
    command: --port 6880 --ipv6
#    network_mode: host
#    network_mode: bridge
    ports:
      - 6880:6880
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: 1m
# Jellyfin -------------------------------------------------------------------------------
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./jellyfin-config:/config
      - ${JELLYFIN_SHOWS_DIR}:/data/tvshows
      - ${JELLYFIN_MOVIES_DIR}:/data/movies
    ports:
      - 8096:8096
    restart: unless-stopped
# Sonarr -------------------------------------------------------------------------------
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./sonarr-config:/config
      # - /path/to/tvseries:/tv #optional
      # - /path/to/downloadclient-downloads:/downloads #optional
      - ${SONARR_DOWNLOAD_DIR}:/downloads #optional
    ports:
      - 8989:8989
    restart: unless-stopped
# Prowlarr -------------------------------------------------------------------------------
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./prowlarr-config:/config
    ports:
      - 9696:9696
    restart: unless-stopped
