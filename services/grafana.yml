version: '3'

networks:
  default:
    name: nginx-services

volumes:
  grafana-storage:
  prometheus-data:

services:
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped

  loki:
    image: grafana/loki
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ${CONFIG_DIR}/loki/loki-config.yaml:/etc/promtail/local-config.yaml
    restart: unless-stopped

  promtail:
    image:  grafana/promtail
    container_name: promtail
    command: -config.file=/etc/promtail/docker-config.yaml
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_DIR}/promtail/promtail-config.yaml:/etc/promtail/docker-config.yaml
    depends_on:
    - loki
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command: --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ${CONFIG_DIR}/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped

  cadvisor:
    container_name: cadvisor
    # image: zcube/cadvisor
    image: gcr.io/cadvisor/cadvisor-arm64:v0.45.0
    volumes: 
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/machine-id:/etc/machine-id:ro
    privileged: true
    command:
      - "--docker_only=true"
      - "--housekeeping_interval=120s"
      - "--disable_metrics=cpu_topology,disk,memory_numa,tcp,udp,percpu,sched,process,hugetlb,referenced_memory,resctrl,cpuset,advtcp"
      # - "--disable_metrics=accelerator,cpu_topology,disk,memory_numa,tcp,udp,percpu,sched,process,hugetlb,referenced_memory,resctrl,cpuset,advtcp"
      - '--store_container_labels=false'
      - '--whitelisted_container_labels=org.label-schema.group,com.docker.compose.project,com.docker.compose.service'
    devices: 
      - "/dev/kmsg"
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
